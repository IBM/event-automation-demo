apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaConnector
metadata:
  name: kafka-datagen
  labels:
    eventstreams.ibm.com/cluster: kafka-connect-cluster
spec:
  class: com.ibm.eventautomation.demos.loosehangerjeans.DatagenSourceConnector
  tasksMax: 1
  config:
    key.converter: org.apache.kafka.connect.storage.StringConverter
    key.converter.schemas.enable: false
    value.converter: org.apache.kafka.connect.json.JsonConverter
    value.converter.schemas.enable: false
    startup.history.enabled: true

---

apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaConnector
metadata:
  name: kafka-datagen-avro
  labels:
    eventstreams.ibm.com/cluster: kafka-connect-cluster
spec:
  class: com.ibm.eventautomation.demos.loosehangerjeans.DatagenSourceConnector
  tasksMax: 1
  autoRestart:
    enabled: true
    maxRestarts: 20
  config:
    key.converter: org.apache.kafka.connect.storage.StringConverter
    key.converter.schemas.enable: false
    value.converter: io.apicurio.registry.utils.converter.AvroConverter
    value.converter.schemas.enable: true

    startup.history.enabled: true

    topic.name.sensorreadings: SENSOR.READINGS.AVRO
    topic.name.orders: ORDERS.NEW.AVRO
    topic.name.cancellations: CANCELLATIONS.AVRO
    topic.name.badgeins: DOOR.BADGEIN.AVRO
    topic.name.stockmovements: STOCK.MOVEMENT.AVRO
    topic.name.newcustomers: CUSTOMERS.NEW.AVRO
    topic.name.onlineorders: ORDERS.ONLINE.AVRO
    topic.name.outofstocks: STOCK.NOSTOCK.AVRO
    topic.name.returnrequests: PRODUCT.RETURNS.AVRO
    topic.name.productreviews: PRODUCT.REVIEWS.AVRO
    topic.name.transactions: TRANSACTIONS.AVRO
    topic.name.abandonedorders: ORDERS.ABANDONED.AVRO

    timings.ms.badgeins: 60000

    value.converter.apicurio.auth.username: kafka-connect-credentials
    value.converter.apicurio.auth.password: ${file:/opt/kafka/connect-password/kafka-connect-credentials:password}

    value.converter.apicurio.registry.request.ssl.truststore.location: /mnt/cluster-ca-cert/ca.p12
    value.converter.apicurio.registry.request.ssl.truststore.type: PKCS12
    value.converter.apicurio.registry.request.ssl.truststore.password: ${file:/mnt/cluster-ca-cert:ca.password}
    value.converter.apicurio.registry.url: {{ schemaregistry_url }}
    value.converter.apicurio.registry.auto-register: true
    value.converter.apicurio.registry.dereference-schema: true
    value.converter.apicurio.registry.global-id: io.apicurio.registry.utils.serde.strategy.GetOrCreateIdStrategy

---

apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaConnector
metadata:
  name: kafka-datagen-reg
  labels:
    eventstreams.ibm.com/cluster: kafka-connect-cluster
spec:
  class: com.ibm.eventautomation.demos.loosehangerjeans.DatagenSourceConnector
  tasksMax: 1
  autoRestart:
    enabled: true
    maxRestarts: 20
  config:
    key.converter: org.apache.kafka.connect.storage.StringConverter
    key.converter.schemas.enable: false
    value.converter: io.apicurio.registry.utils.converter.AvroConverter
    value.converter.schemas.enable: true

    startup.history.enabled: false

    topic.name.sensorreadings: SENSOR.READINGS.REG
    topic.name.orders: ORDERS.NEW.REG
    topic.name.cancellations: CANCELLATIONS.REG
    topic.name.badgeins: DOOR.BADGEIN.REG
    topic.name.stockmovements: STOCK.MOVEMENT.REG
    topic.name.newcustomers: CUSTOMERS.NEW.REG
    topic.name.onlineorders: ORDERS.ONLINE.REG
    topic.name.outofstocks: STOCK.NOSTOCK.REG
    topic.name.returnrequests: PRODUCT.RETURNS.REG
    topic.name.productreviews: PRODUCT.REVIEWS.REG
    topic.name.transactions: TRANSACTIONS.REG
    topic.name.abandonedorders: ORDERS.ABANDONED.REG

    timings.ms.badgeins: 600000
    cancellations.ratio: 0.05

    value.converter.apicurio.auth.username: kafka-connect-credentials
    value.converter.apicurio.auth.password: ${file:/opt/kafka/connect-password/kafka-connect-credentials:password}

    value.converter.apicurio.registry.request.ssl.truststore.location: /mnt/cluster-ca-cert/ca.p12
    value.converter.apicurio.registry.request.ssl.truststore.type: PKCS12
    value.converter.apicurio.registry.request.ssl.truststore.password: ${file:/mnt/cluster-ca-cert:ca.password}

    value.converter.apicurio.registry.url: {{ schemaregistry_url }}
    value.converter.apicurio.registry.auto-register: true
    value.converter.apicurio.registry.as-confluent: true
    value.converter.apicurio.registry.use-id: contentId
    value.converter.apicurio.registry.headers.enabled: false
    value.converter.apicurio.registry.dereference-schema: true
